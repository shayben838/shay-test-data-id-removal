name: Data LG ID Removal Check

on:
  pull_request:
    branches:
      - main
      - my-custom-branch-with-data-lg-id

jobs:
  check_data_lg_id_removal:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Check for removed data-lg-id
        id: check_removed_data_lg_id
        run: |
          echo "base.ref: origin/${{ github.event.pull_request.base.ref }}"
          echo "head.ref: origin/${{ github.event.pull_request.head.ref }}"
          git diff --name-only origin/${{ github.event.pull_request.base.ref }}..origin/${{ github.event.pull_request.head.ref }} | while read -r file; do
            echo "11 Checking file: $file"
            # git diff origin/${{ github.event.pull_request.base.ref }}..origin/${{ github.event.pull_request.head.ref }}
            # echo "22 git diff ... works!!"
            # git diff origin/${{ github.event.pull_request.base.ref }}..origin/${{ github.event.pull_request.head.ref }} -- "$file"
            echo "33 git diff -- "$file" works!!"
            
            echo git diff origin/${{ github.event.pull_request.base.ref }}..origin/${{ github.event.pull_request.head.ref }} -- "$file"
            git diff origin/${{ github.event.pull_request.base.ref }}..origin/${{ github.event.pull_request.head.ref }} -- "$file" |  grep 'data-lg-id'
          done

      - name: Check results and notify
        run: |
          echo "The following files have removed data-lg-id instances:"
          echo "${{ steps.check_removed_data_lg_id.outputs }}"
          echo "----"
          echo "${{ steps.check_removed_data_lg_id.outputs.stdout }}"
          # Add your alerting/notification logic here, e.g., create a GitHub issue or

# TODO:
# Change the base branch so as not to be hard coded.

# # WORKS AS EXPECTED
# common_ancestor=$(git merge-base staging HEAD)
# # Get the list of files modified between the common ancestor commit and HEAD
# git diff --name-only $common_ancestor..HEAD | while read -r file; do
#     # Print the filename for reference
#     echo "Checking file: $file"
#     # Perform git diff on each individual file
#     git diff $common_ancestor..HEAD -- "$file" | grep -e '^-.*data-lg-id'
# done
