name: Data LG ID Removal Check

on:
  pull_request:
    branches:
      - main
      - my-custom-branch-with-data-lg-id

jobs:
  check_data_lg_id_removal:
    runs-on: ubuntu-latest

    outputs:
      id: removed_data
      value: ${{ steps.check_removed_data_lg_id.outputs.removed_files }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set flag for removed data-lg-id
        id: set_flag
        run: |
          has_removed_data_lg_id="false"  # Initialize as false
          echo "base.ref: origin/${{ github.event.pull_request.base.ref }}"
          echo "head.ref: origin/${{ github.event.pull_request.head.ref }}"

          git diff --name-only origin/${{ github.event.pull_request.base.ref }}..origin/${{ github.event.pull_request.head.ref }} | while read -r file; do
            echo "Checking file: $file"
            if git diff origin/${{ github.event.pull_request.base.ref }}..origin/${{ github.event.pull_request.head.ref }} -- "$file" | grep -q 'data-lg-id'; then
              echo "File $file has removed data-lg-id instances"
              has_removed_data_lg_id="true"  # Set the flag to true
            fi
          done

          echo "::set-output name=has_removed_data_lg_id::$has_removed_data_lg_id"

      - name: Check results and notify
        run: |
          echo "The following files have removed data-lg-id instances:"
          echo -e "${{ needs.check_data_lg_id_removal.outputs.removed_files }}"

          # Access the environment variable set in the previous step
          if [ "${{ needs.check_data_lg_id_removal.outputs.has_removed_data_lg_id }}" == "true" ]; then
            echo "Flag indicates there are removed data-lg-id instances."
            # Add your alerting/notification logic here, e.g., create a GitHub issue or
          else
            echo "No removed data-lg-id instances detected."
          fi
